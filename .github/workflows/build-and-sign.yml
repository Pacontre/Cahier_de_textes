name: Build and Sign Application

on:
  release:
    types: [created]

jobs:
  build-and-sign:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    - name: Build with PyInstaller
      run: pyinstaller --onefile --windowed Cahier_de_textes_v12.py
    - name: Sign the executable
      env:
        CERTIFICATE: ${{ secrets.CODE_SIGNING_CERTIFICATE }}
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
      run: |
        $certPath = "certificate.pfx"
        [System.IO.File]::WriteAllBytes($certPath, [System.Convert]::FromBase64String($env:CERTIFICATE))
        $securePass = ConvertTo-SecureString -String $env:CERTIFICATE_PASSWORD -Force -AsPlainText
        $cert = Get-PfxCertificate -FilePath $certPath -Password $securePass
        Set-AuthenticodeSignature -FilePath dist/Cahier_de_textes_v12.exe -Certificate $cert -TimestampServer "http://timestamp.digicert.com"
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/Cahier_de_textes_v12.exe
        asset_name: Cahier_de_textes_v12.exe
        asset_content_type: application/octet-stream
