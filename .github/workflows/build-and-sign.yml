name: Release Application

on:
  release:
    types: [created]

jobs:
  sign-and-release:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '20'

    - name: Import GPG key
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        echo "$env:GPG_PRIVATE_KEY" | gpg --batch --import
        echo "5" | gpg --batch --yes --passphrase "$env:GPG_PASSPHRASE" --import-ownertrust

    - name: Sign the executable with GPG
      env:
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      run: |
        gpg --batch --yes --passphrase "$env:GPG_PASSPHRASE" --pinentry-mode loopback --output Cahier_de_textes.exe.gpg --detach-sign Cahier_de_textes.exe

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Signed Executable
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Cahier_de_textes.exe.gpg
        asset_name: Cahier_de_textes.exe.gpg
        asset_content_type: application/octet-stream

    - name: Upload Distribution Zip
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Cahier_de_textes_distribution.zip
        asset_name: Cahier_de_textes_distribution.zip
        asset_content_type: application/zip

